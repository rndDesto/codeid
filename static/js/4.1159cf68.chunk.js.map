{"version":3,"sources":["components/icons/star_border-24px.svg","pages/Home/Home.js","util/fetch.js","util/storage.js","components/icons/star-24px.svg","components/DataTable/DataTable.js","components/ModalDialog/ModalDialog.js"],"names":["module","exports","useStyles","makeStyles","theme","postercontainer","backgroundColor","display","spacing","posterTitle","Home","classes","useState","movie","setMovie","detailMovie","setDetailMovie","searchMovie","setSearchMovie","openDetailMovie","setOpenDetailMovie","useEffect","handleSearchMovie","HandleGetContact","submitSearchMOvie","e","preventDefault","getMovies","then","res","newMovieList","Search","map","data","favorite","fav","JSON","parse","getFavMovie","forEach","favMovie","imdbID","catch","err","alert","message","getContact","console","log","handleAddFavorite","newArr","index","findIndex","val","getFav","addFav","favIndex","push","setFavMovie","stringify","splice","handleDetailMovie","id","getMovieDetail","handleCloseModal","column","heading","value","Typography","onClick","Title","titleMovie","Tooltip","title","Button","alt","Star","src","StarBorder","addFavorite","DetailMovie","Object","keys","length","mov","key","Grid","item","xs","Container","maxWidth","onSubmit","alignItems","container","direction","TextField","fullWidth","onChange","target","placeholder","size","variant","color","DataTable","ModalDialog","inputProps","open","onClose","DialogContent","className","Poster","DialogActions","OMDBAPI","fetch","url","method","param1","param2","Promise","resolve","reject","axios","defaultError","code","status","response","a","localStorage","setItem","getItem","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","TableBody","cItem","cIdx","newValue","defaultProps","children","Dialog"],"mappings":"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","file":"static/js/4.1159cf68.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/star_border-24px.e8c07bf4.svg\";","import React, { useEffect, useState, Fragment } from 'react';\r\nimport { getMovies, getMovieDetail, getContact } from '../../util/fetch';\r\nimport { getFavMovie, setFavMovie } from '../../util/storage';\r\nimport DataTable from '../../components/DataTable';\r\nimport { Button, TextField, Container, Grid, DialogContent, Typography, DialogActions, makeStyles, Tooltip } from '@material-ui/core';\r\nimport ModalDialog from '../../components/ModalDialog';\r\nimport Star from '../../components/icons/star-24px.svg';\r\nimport StarBorder from '../../components/icons/star_border-24px.svg';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  postercontainer: {\r\n    backgroundColor: '#fafafa',\r\n    display: 'flex',\r\n    'justifyContent': 'center',\r\n    'marginBottom': theme.spacing(2)\r\n  },\r\n  posterTitle:{\r\n    'marginBottom': theme.spacing(2)\r\n  },\r\n}));\r\n\r\nconst Home = () => {\r\n  const classes = useStyles();\r\n  const [movie, setMovie] = useState([]);\r\n  const [detailMovie, setDetailMovie] = useState({});\r\n  const [searchMovie, setSearchMovie] = useState('');\r\n  const [openDetailMovie, setOpenDetailMovie] = useState(false);\r\n\r\n  useEffect(() => {\r\n    handleSearchMovie('start');\r\n    HandleGetContact();\r\n  }, []);\r\n\r\n\r\n\r\n  const submitSearchMOvie = (e) => {\r\n    e.preventDefault();\r\n    handleSearchMovie(searchMovie);\r\n  };\r\n\r\n  const handleSearchMovie = (searchMovie) => {\r\n    getMovies(searchMovie).then(res => {\r\n      let movieLIst = res.Search;\r\n\r\n      let newMovieList = movieLIst.map(data => {\r\n        return {\r\n          ...data,\r\n          favorite: false\r\n        };\r\n      });\r\n\r\n\r\n      let fav = JSON.parse(getFavMovie());\r\n      if (fav) {\r\n        newMovieList.forEach((data) => {\r\n          fav.forEach((favMovie) => {\r\n            if (data.imdbID === favMovie.imdbID) {\r\n              data.favorite = true;\r\n            }\r\n          });\r\n        });\r\n        setMovie(newMovieList);\r\n      }\r\n      else {\r\n        setMovie(newMovieList);\r\n      }\r\n\r\n    }).catch(err => {\r\n      alert(err.message);\r\n    });\r\n  };\r\n\r\n  const HandleGetContact = () =>{\r\n    getContact().then(res => {console.log('res = ', res);}).catch(err => {console.log('err = ', err);});\r\n  };\r\n\r\n  const addFavorite = (movie) => {\r\n    return (\r\n      <Tooltip title={movie.favorite ? 'remove favorite': 'add favorite'}>\r\n        <Button\r\n          id={`konfirmasi-${movie.imdbID}`}\r\n          onClick={() => handleAddFavorite(movie)}>\r\n          {movie.favorite ?\r\n            <img alt={Star} src={Star} />:\r\n            <img alt={StarBorder} src={StarBorder} />}\r\n        </Button>\r\n      </Tooltip>\r\n    );\r\n  };\r\n\r\n\r\n  const handleAddFavorite = (data) => {\r\n    let newArr = [...movie];\r\n    let index = newArr.findIndex(val => val.imdbID === data.imdbID);\r\n    let getFav = JSON.parse(getFavMovie());\r\n\r\n    newArr[index].favorite = !newArr[index].favorite;\r\n\r\n    if (getFav) {\r\n      let addFav = getFav;\r\n      let favIndex = addFav.findIndex(val => val.imdbID === data.imdbID);\r\n\r\n      if (favIndex < 0) {\r\n        addFav.push(data);\r\n        setFavMovie(JSON.stringify(addFav));\r\n      }\r\n      else {\r\n        addFav.splice(favIndex, 1);\r\n        setFavMovie(JSON.stringify(addFav));\r\n      }\r\n\r\n    }\r\n    else {\r\n      setFavMovie(JSON.stringify([data]));\r\n    }\r\n\r\n    setMovie(newArr);\r\n  };\r\n\r\n  const titleMovie = (movie) => {\r\n    return <Typography onClick={()=>handleDetailMovie(movie.imdbID)}>{movie.Title}</Typography>;\r\n  };\r\n\r\n  const handleDetailMovie = (id) => {\r\n    getMovieDetail(id).then(res => {\r\n      setOpenDetailMovie(true);\r\n      setDetailMovie(res);\r\n    }).catch(err => {\r\n      alert(err.message);\r\n    });\r\n  };\r\n\r\n\r\n  const handleCloseModal = () => {\r\n    setOpenDetailMovie(false);\r\n  };\r\n\r\n  const column = [\r\n    { heading: 'Title', value: (movie) => titleMovie(movie) },\r\n    { heading: 'Year', value: 'Year' },\r\n    { heading: 'ID', value: 'imdbID' },\r\n    { heading: '', value: (movie) => addFavorite(movie) },\r\n  ];\r\n\r\n  let HeadDetailMovie = ['Year','Released','Director','Actors','Plot','Awards'];\r\n  let DetailMovie= [];\r\n\r\n  if(Object.keys(detailMovie).length !== 0){\r\n    HeadDetailMovie.forEach((data, index)=>{\r\n      let mov = (\r\n        <Fragment key={index}>\r\n          <Grid item xs={2}>\r\n            <Typography>{data}</Typography>\r\n          </Grid>\r\n          <Grid item xs={10}>{detailMovie[data]}</Grid>\r\n        </Fragment>\r\n      );\r\n\r\n      DetailMovie.push(mov);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Container maxWidth=\"md\">\r\n        <form onSubmit={(e) => submitSearchMOvie(e)}>\r\n          <Grid alignItems=\"center\" container direction=\"row\" spacing={2}>\r\n            <Grid item xs={8}>\r\n              <TextField fullWidth onChange={(e) => setSearchMovie(e.target.value)} placeholder=\"Search movie title\" size=\"small\" variant=\"outlined\" />\r\n            </Grid>\r\n            <Grid item xs={2}>\r\n              <Button color=\"primary\" fullWidth onClick={(e) => submitSearchMOvie(e)} variant=\"outlined\">Cari</Button>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </Container>\r\n      {movie.length !== 0 ? <DataTable column={column} data={movie} /> : ''}\r\n      <ModalDialog inputProps={{ open:openDetailMovie, onClose:handleCloseModal }}>\r\n        <DialogContent>\r\n          <Grid container>\r\n            <Grid item xs={12}>\r\n              <div className={classes.postercontainer}>\r\n                <img alt={detailMovie.Title} src={detailMovie.Poster}/>\r\n              </div>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Typography className={classes.posterTitle} variant=\"h5\">{detailMovie.Title}</Typography>\r\n              <Grid container spacing={2}>\r\n                {DetailMovie}\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button color=\"primary\" onClick={handleCloseModal}>\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n      </ModalDialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import axios from 'axios';\r\n\r\nconst OMDBAPI = 'http://www.omdbapi.com';\r\n\r\nconst CONTACT_API = 'https://simple-contact-crud.herokuapp.com';\r\n\r\n\r\nconst fetch = (url, method, param1, param2) => {\r\n  return new Promise((resolve, reject) => {\r\n    axios[method](url, param1, param2)\r\n      .then(res => resolve(res.data))\r\n      .catch(err => {\r\n        const defaultError = {\r\n          code: 500,\r\n          status: 'error',\r\n          message: 'Failed to fetch data. Please contact developer.'\r\n        };\r\n        if (!err.response) reject(defaultError);\r\n        else if (!err.response.data) reject(defaultError);\r\n        else reject(err.response.data);\r\n      });\r\n  });\r\n};\r\n\r\nexport const getMovies = async (title) => (\r\n  await fetch(`${OMDBAPI}/?s=${title}&plot=full&apikey=761befef`, 'get')\r\n);\r\n\r\nexport const getMovieDetail = async (id) => (\r\n  await fetch(`${OMDBAPI}/?i=${id}&apikey=761befef`, 'get')\r\n);\r\n\r\n\r\nexport const getContact = async () => (\r\n  await fetch(`${CONTACT_API}/contact`, 'get')\r\n);\r\n\r\n","const FAV_MOVIE = 'fav_novie';\r\nexport function setFavMovie(value) {\r\n  localStorage.setItem(FAV_MOVIE, value);\r\n}\r\n\r\nexport function getFavMovie() {\r\n  return localStorage.getItem(FAV_MOVIE);\r\n}\r\n\r\nexport function clearStorages() {\r\n  localStorage.setFavMovie(FAV_MOVIE);\r\n}\r\n","module.exports = __webpack_public_path__ + \"static/media/star-24px.555f59ec.svg\";","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { TableContainer, Paper, Table, TableHead, TableRow, TableCell, TableBody } from '@material-ui/core';\r\n\r\nconst DataTable = ({ column, data }) => {\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table>\r\n        <TableHead>\r\n          <TableRow>\r\n            {column.map((data, index) => {\r\n              return (\r\n                <TableCell key={`${index}`}>{data.heading}</TableCell>\r\n              );\r\n            })}\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {data.map((item, index) => {\r\n            return (\r\n              <TableRow key={`${index}`}>\r\n                {column.map((cItem, cIdx) => {\r\n                  const { value } = cItem;\r\n                  const newValue = typeof value === 'function' ? value(item) : item[value];\r\n\r\n                  return (\r\n                    <TableCell key={cIdx}>\r\n                      {newValue || '-'}\r\n                    </TableCell>\r\n                  );\r\n                })}\r\n              </TableRow>\r\n            );\r\n          })}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\n\r\nDataTable.defaultProps = {\r\n  column: [],\r\n  data: [],\r\n};\r\n\r\nDataTable.propTypes = {\r\n  column: PropTypes.array,\r\n  data: PropTypes.array,\r\n};\r\n\r\nexport default DataTable;\r\n","import React from 'react';\r\nimport { Dialog } from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ModalDialog = ({ children, inputProps }) => {\r\n  return (\r\n    <Dialog {...inputProps} >\r\n      {children}\r\n    </Dialog>\r\n  );\r\n};\r\n\r\n\r\nModalDialog.defaultProps = {\r\n  children: null,\r\n  inputProps: {},\r\n};\r\n\r\nModalDialog.propTypes = {\r\n  children: PropTypes.node,\r\n  inputProps: PropTypes.object,\r\n};\r\n\r\nexport default ModalDialog;\r\n"],"sourceRoot":""}