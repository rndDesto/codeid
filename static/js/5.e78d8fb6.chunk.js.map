{"version":3,"sources":["pages/Favorite/Favorite.js","util/fetch.js","util/storage.js","components/icons/star-24px.svg","components/DataTable/DataTable.js","components/ModalDialog/ModalDialog.js"],"names":["useStyles","makeStyles","theme","postercontainer","backgroundColor","display","spacing","posterTitle","Favorite","classes","useState","movies","setMovies","detailMovie","setDetailMovie","openDetailMovie","setOpenDetailMovie","useEffect","favMovie","getFavMovie","JSON","parse","handleDetailMovie","id","getMovieDetail","then","res","catch","err","alert","message","handleCloseModal","removeFavorite","data","addFav","favIndex","findIndex","val","imdbID","splice","setFavMovie","stringify","column","heading","value","movie","Typography","onClick","Title","titleMovie","Tooltip","title","Button","alt","Star","src","addFavorite","DetailMovie","Object","keys","length","forEach","index","mov","key","Grid","item","xs","push","DataTable","ModalDialog","inputProps","open","onClose","DialogContent","container","className","Poster","variant","DialogActions","color","OMDBAPI","fetch","url","method","param1","param2","Promise","resolve","reject","axios","defaultError","code","status","response","getMovies","a","getContact","localStorage","setItem","getItem","module","exports","TableContainer","component","Paper","Table","TableHead","TableRow","map","TableCell","TableBody","cItem","cIdx","newValue","defaultProps","children","Dialog"],"mappings":"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","file":"static/js/5.e78d8fb6.chunk.js","sourcesContent":["import React, { useEffect, useState, Fragment } from 'react';\r\nimport { getFavMovie, setFavMovie } from '../../util/storage';\r\nimport DataTable from '../../components/DataTable';\r\nimport { Button, DialogContent, Grid, Typography, DialogActions, makeStyles, Tooltip } from '@material-ui/core';\r\nimport ModalDialog from '../../components/ModalDialog';\r\nimport { getMovieDetail } from '../../util/fetch';\r\nimport Star from '../../components/icons/star-24px.svg';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  postercontainer: {\r\n    backgroundColor: '#fafafa',\r\n    display: 'flex',\r\n    'justifyContent': 'center',\r\n    'marginBottom': theme.spacing(2)\r\n  },\r\n  posterTitle:{\r\n    'marginBottom': theme.spacing(2)\r\n  }\r\n}));\r\n\r\nconst Favorite = () => {\r\n  const classes = useStyles();\r\n  const [movies, setMovies] = useState([]);\r\n  const [detailMovie, setDetailMovie] = useState({});\r\n  const [openDetailMovie, setOpenDetailMovie] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let favMovie = getFavMovie();\r\n    if(favMovie){\r\n      setMovies(JSON.parse(favMovie));\r\n    }\r\n  }, []);\r\n\r\n  const titleMovie = (movie) => {\r\n    return <Typography onClick={()=>handleDetailMovie(movie.imdbID)}>{movie.Title}</Typography>;\r\n  };\r\n\r\n  const handleDetailMovie = (id) => {\r\n    getMovieDetail(id).then(res => {\r\n      setOpenDetailMovie(true);\r\n      setDetailMovie(res);\r\n    }).catch(err => {\r\n      alert(err.message);\r\n    });\r\n  };\r\n\r\n\r\n  const handleCloseModal = () => {\r\n    setOpenDetailMovie(false);\r\n  };\r\n\r\n  const addFavorite = (movie) => {\r\n    return (\r\n      <Tooltip title=\"remove favorite\">\r\n        <Button\r\n          id={`konfirmasi-${movie.imdbID}`}\r\n          onClick={() => removeFavorite(movie)}>\r\n          <img alt={Star} src={Star} />\r\n        </Button>\r\n      </Tooltip>\r\n    );\r\n  };\r\n\r\n  const removeFavorite = (data) => {\r\n    let getFav = JSON.parse(getFavMovie());\r\n\r\n    let addFav = getFav;\r\n    let favIndex = addFav.findIndex(val => val.imdbID === data.imdbID);\r\n\r\n    addFav.splice(favIndex, 1);\r\n    setFavMovie(JSON.stringify(addFav));\r\n    setMovies(addFav);\r\n  };\r\n\r\n  const column = [\r\n    { heading: 'Title', value: (movie) => titleMovie(movie) },\r\n    { heading: 'Year', value: 'Year' },\r\n    { heading: 'ID', value: 'imdbID' },\r\n    { heading: '', value: (movie) => addFavorite(movie) },\r\n  ];\r\n\r\n  let HeadDetailMovie = ['Year','Released','Director','Actors','Plot','Awards'];\r\n  let DetailMovie= [];\r\n\r\n  if(Object.keys(detailMovie).length !== 0){\r\n    HeadDetailMovie.forEach((data, index)=>{\r\n      let mov = (\r\n        <Fragment key={index}>\r\n          <Grid item xs={2}>\r\n            <Typography>{data}</Typography>\r\n          </Grid>\r\n          <Grid item xs={10}>{detailMovie[data]}</Grid>\r\n        </Fragment>\r\n      );\r\n      DetailMovie.push(mov);\r\n    });\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      {movies.length !== 0 ? <DataTable column={column} data={movies} />:''}\r\n      <ModalDialog inputProps={{ open:openDetailMovie, onClose:handleCloseModal }}>\r\n        <DialogContent>\r\n          <Grid container>\r\n            <Grid item xs={12}>\r\n              <div className={classes.postercontainer}>\r\n                <img alt={detailMovie.Title} src={detailMovie.Poster}/>\r\n              </div>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Typography className={classes.posterTitle} variant=\"h5\">{detailMovie.Title}</Typography>\r\n              <Grid container spacing={2}>\r\n                {DetailMovie}\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button color=\"primary\" onClick={handleCloseModal}>\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n      </ModalDialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Favorite;\r\n","import axios from 'axios';\r\n\r\nconst OMDBAPI = 'http://www.omdbapi.com';\r\n\r\nconst CONTACT_API = 'https://simple-contact-crud.herokuapp.com';\r\n\r\n\r\nconst fetch = (url, method, param1, param2) => {\r\n  return new Promise((resolve, reject) => {\r\n    axios[method](url, param1, param2)\r\n      .then(res => resolve(res.data))\r\n      .catch(err => {\r\n        const defaultError = {\r\n          code: 500,\r\n          status: 'error',\r\n          message: 'Failed to fetch data. Please contact developer.'\r\n        };\r\n        if (!err.response) reject(defaultError);\r\n        else if (!err.response.data) reject(defaultError);\r\n        else reject(err.response.data);\r\n      });\r\n  });\r\n};\r\n\r\nexport const getMovies = async (title) => (\r\n  await fetch(`${OMDBAPI}/?s=${title}&plot=full&apikey=761befef`, 'get')\r\n);\r\n\r\nexport const getMovieDetail = async (id) => (\r\n  await fetch(`${OMDBAPI}/?i=${id}&apikey=761befef`, 'get')\r\n);\r\n\r\n\r\nexport const getContact = async () => (\r\n  await fetch(`${CONTACT_API}/contact`, 'get')\r\n);\r\n\r\n","const FAV_MOVIE = 'fav_novie';\r\nexport function setFavMovie(value) {\r\n  localStorage.setItem(FAV_MOVIE, value);\r\n}\r\n\r\nexport function getFavMovie() {\r\n  return localStorage.getItem(FAV_MOVIE);\r\n}\r\n\r\nexport function clearStorages() {\r\n  localStorage.setFavMovie(FAV_MOVIE);\r\n}\r\n","module.exports = __webpack_public_path__ + \"static/media/star-24px.555f59ec.svg\";","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { TableContainer, Paper, Table, TableHead, TableRow, TableCell, TableBody } from '@material-ui/core';\r\n\r\nconst DataTable = ({ column, data }) => {\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table>\r\n        <TableHead>\r\n          <TableRow>\r\n            {column.map((data, index) => {\r\n              return (\r\n                <TableCell key={`${index}`}>{data.heading}</TableCell>\r\n              );\r\n            })}\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {data.map((item, index) => {\r\n            return (\r\n              <TableRow key={`${index}`}>\r\n                {column.map((cItem, cIdx) => {\r\n                  const { value } = cItem;\r\n                  const newValue = typeof value === 'function' ? value(item) : item[value];\r\n\r\n                  return (\r\n                    <TableCell key={cIdx}>\r\n                      {newValue || '-'}\r\n                    </TableCell>\r\n                  );\r\n                })}\r\n              </TableRow>\r\n            );\r\n          })}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\n\r\nDataTable.defaultProps = {\r\n  column: [],\r\n  data: [],\r\n};\r\n\r\nDataTable.propTypes = {\r\n  column: PropTypes.array,\r\n  data: PropTypes.array,\r\n};\r\n\r\nexport default DataTable;\r\n","import React from 'react';\r\nimport { Dialog } from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ModalDialog = ({ children, inputProps }) => {\r\n  return (\r\n    <Dialog {...inputProps} >\r\n      {children}\r\n    </Dialog>\r\n  );\r\n};\r\n\r\n\r\nModalDialog.defaultProps = {\r\n  children: null,\r\n  inputProps: {},\r\n};\r\n\r\nModalDialog.propTypes = {\r\n  children: PropTypes.node,\r\n  inputProps: PropTypes.object,\r\n};\r\n\r\nexport default ModalDialog;\r\n"],"sourceRoot":""}